name: Build Electron App

on: push

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        node-version: [16.x] 
    
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./application
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install

      - name: Build the Electron App
        run: npm run make

      - name: Lint Code
        run: npm run lint

      - name: Run Tests
        run: npm test

      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: electron-build-${{ matrix.os }}
          path: application/out/make  
        
  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Mac Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: electron-build-macos-latest
          path: artifacts/macos
          
      - name: Download Windows Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: electron-build-windows-latest
          path: artifacts/windows

    # Compress Mac build artifacts
      - name: Compress Mac Build
        run: zip -r electron-macos.zip artifacts/macos/

    # Compress Windows build artifacts
      - name: Compress Windows Build
        run: zip -r electron-windows.zip artifacts/windows/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }} # Use versioning logic
          release_name: Release v${{ github.run_number }}
          body: |
            This is an automated release of the Electron app.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Mac Build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./electron-macos.zip
          asset_name: electron-macos.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Upload Windows Build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./electron-windows.zip
          asset_name: electron-windows.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./application

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
        
      - name: NPM Install
        run: npm install 


      - name: Run Biome
        run: npm run lint

      - name: Run Tests
        run: npm run test
